name: pub

packages:
  - apps/**
  - libs/**

command:
  version:
    # Generate commit links in package changelogs.
    linkToCommits: true
    # Additionally build a changelog at the root of the workspace.
    workspaceChangelog: true
    hooks:
      preCommit: melos run update-version

  bootstrap:
    # It seems so that running "pub get" in parallel has some issues (like
    # https://github.com/dart-lang/pub/issues/3404). Disabling this feature
    # makes the CI much more stable.
    runPubGetInParallel: false

scripts:
  analyze:
    exec: flutter analyze .
    description: analyze dart code

  format:
    exec: dart format . --line-length=180
    description: format dart code

  fix:
    exec: dart fix . --apply
    description: format dart code
  generate:
    run: melos run generate:dart && melos run generate:flutter
    description: Build all generated files for Dart & Flutter packages in this project.

  generate:dart:
    run: melos exec -c 1 --depends-on="build_runner" --no-flutter --ignore="riverpod_lint_flutter_test" -- "dart run build_runner build --delete-conflicting-outputs"
    description: Build all generated files for Dart packages in this project.

  generate:flutter:
    run: melos exec -c 1 --depends-on="build_runner" --flutter -- "flutter pub run build_runner build --delete-conflicting-outputs"
    description: Build all generated files for Flutter packages in this project.

  test:
    run: melos run test:dart --no-select && melos run test:flutter --no-select
    description: Run all Dart & Flutter tests in this project.

  test:dart:
    run: melos exec  -c 1 --fail-fast -- "\$MELOS_ROOT_PATH/scripts/coverage.sh"
    description: Run Dart tests for a specific package in this project.

  test:flutter:
    run: melos exec --dir-exists="test" -c 1 --fail-fast -- "flutter test --coverage"
    description: Run Flutter tests for a specific package in this project.

  get: melos exec -- flutter pub get

  update: melos exec -- flutter pub update

  upgrade: melos exec -- flutter pub upgrade --major-versions

  outdated:
    exec: flutter pub outdated

  lint:
    exec: dart run custom_lint

  update-version:
    run: |
      # Loop through the packages directory
      for d in packages/*/ ; do
        # Get version number
        version=$(awk '/version:/ { 
          pos=match($2, /[0-9]+\.[0-9]+\.[0-9]+/);
          print substr($2, pos); }' $d/pubspec.yaml)
        # Update version.dart file
        echo "const version = '$version';" > $d/lib/src/version.dart
      done
      # Remove the version file for yes_another_json_isolate
      rm packages/yet_another_json_isolate/lib/src/version.dart
      # Stage the version.dart file change
      git add packages/*/lib/src/version.dart
    description: Updates the version.dart file for each packages except yet_another_json_isolate
